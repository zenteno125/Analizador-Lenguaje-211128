
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN CONTENIDO DESDE DOUBLESTRING FUNN GT HASTA ID IF IFELSE INT LBRACE LPAREN LT MAIN NUMBER PLUS RBRACE REPITE RETURN RPAREN SEMI STRING VARcompleto : funtions\n                | declarations\n                | program\n                | if_clause\n                | expressionfuntions : FUNN ID LPAREN INT ID GT INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACEdeclarations : VAR INT ID SEMI \n                    | VAR STRING ID SEMIprogram : FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACEif_clause : VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACEexpression : VAR INT ID SEMI REPITE ID DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACEcondition :  LT \n                 |  GT \n                 |  GT GT '
    
_lr_action_items = {'FUNN':([0,],[7,]),'VAR':([0,22,],[8,26,]),'$end':([1,2,3,4,5,6,19,20,56,63,70,71,],[0,-1,-2,-3,-4,-5,-7,-8,-11,-6,-9,-10,]),'ID':([7,11,12,17,19,24,29,30,38,39,45,46,53,],[9,15,16,21,23,28,33,34,42,43,49,50,57,]),'MAIN':([7,],[10,]),'INT':([8,13,25,26,],[11,17,29,30,]),'STRING':([8,],[12,]),'LPAREN':([9,10,50,],[13,14,54,]),'RPAREN':([14,33,64,],[18,37,66,]),'SEMI':([15,16,31,34,57,66,],[19,20,35,38,60,68,]),'LBRACE':([18,37,44,51,65,],[22,41,48,55,67,]),'REPITE':([19,],[24,]),'GT':([21,58,],[25,61,]),'ASSIGN':([23,42,],[27,46,]),'NUMBER':([27,32,40,47,54,61,],[31,36,44,51,58,64,]),'DESDE':([28,],[32,]),'IF':([35,],[39,]),'HASTA':([36,],[40,]),'RETURN':([41,],[45,]),'LT':([43,],[47,]),'CONTENIDO':([48,55,67,],[52,59,69,]),'PLUS':([49,],[53,]),'RBRACE':([52,59,60,68,69,],[56,62,63,70,71,]),'IFELSE':([62,],[65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'completo':([0,],[1,]),'funtions':([0,],[2,]),'declarations':([0,],[3,]),'program':([0,],[4,]),'if_clause':([0,],[5,]),'expression':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> completo","S'",1,None,None,None),
  ('completo -> funtions','completo',1,'p_completo','ejemplo.py',67),
  ('completo -> declarations','completo',1,'p_completo','ejemplo.py',68),
  ('completo -> program','completo',1,'p_completo','ejemplo.py',69),
  ('completo -> if_clause','completo',1,'p_completo','ejemplo.py',70),
  ('completo -> expression','completo',1,'p_completo','ejemplo.py',71),
  ('funtions -> FUNN ID LPAREN INT ID GT INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE','funtions',16,'p_funtions','ejemplo.py',75),
  ('declarations -> VAR INT ID SEMI','declarations',4,'p_declarations','ejemplo.py',78),
  ('declarations -> VAR STRING ID SEMI','declarations',4,'p_declarations','ejemplo.py',79),
  ('program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE','program',19,'p_program','ejemplo.py',82),
  ('if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE','if_clause',19,'p_if_clause','ejemplo.py',85),
  ('expression -> VAR INT ID SEMI REPITE ID DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACE','expression',13,'p_expression','ejemplo.py',88),
  ('condition -> LT','condition',1,'p_condition','ejemplo.py',100),
  ('condition -> GT','condition',1,'p_condition','ejemplo.py',101),
  ('condition -> GT GT','condition',2,'p_condition','ejemplo.py',102),
]
