Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOUBLESTRING

Grammar

Rule 0     S' -> completo
Rule 1     completo -> funtions
Rule 2     completo -> declarations
Rule 3     completo -> program
Rule 4     completo -> if_clause
Rule 5     completo -> expression
Rule 6     funtions -> FUNN ID LPAREN INT ID GT INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE
Rule 7     declarations -> VAR INT ID SEMI
Rule 8     declarations -> VAR STRING ID SEMI
Rule 9     program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE
Rule 10    if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE
Rule 11    expression -> VAR INT ID SEMI REPITE ID DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACE
Rule 12    condition -> LT
Rule 13    condition -> GT
Rule 14    condition -> GT GT

Terminals, with rules where they appear

ASSIGN               : 9 10
CONTENIDO            : 10 10 11
DESDE                : 11
DOUBLESTRING         : 
FUNN                 : 6 9
GT                   : 6 9 13 14 14
HASTA                : 11
ID                   : 6 6 6 6 6 7 8 9 9 9 10 10 10 11 11
IF                   : 10
IFELSE               : 10
INT                  : 6 6 7 9 10 11
LBRACE               : 6 9 10 10 11
LPAREN               : 6 9 9
LT                   : 10 12
MAIN                 : 9
NUMBER               : 9 9 10 10 11 11
PLUS                 : 6
RBRACE               : 6 9 10 10 11
REPITE               : 11
RETURN               : 6
RPAREN               : 6 9 9
SEMI                 : 6 7 8 9 9 10 10 11
STRING               : 8
VAR                  : 7 8 9 10 11
error                : 

Nonterminals, with rules where they appear

completo             : 0
condition            : 
declarations         : 2
expression           : 5
funtions             : 1
if_clause            : 4
program              : 3

Parsing method: LALR

state 0

    (0) S' -> . completo
    (1) completo -> . funtions
    (2) completo -> . declarations
    (3) completo -> . program
    (4) completo -> . if_clause
    (5) completo -> . expression
    (6) funtions -> . FUNN ID LPAREN INT ID GT INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE
    (7) declarations -> . VAR INT ID SEMI
    (8) declarations -> . VAR STRING ID SEMI
    (9) program -> . FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE
    (10) if_clause -> . VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE
    (11) expression -> . VAR INT ID SEMI REPITE ID DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACE

    FUNN            shift and go to state 7
    VAR             shift and go to state 8

    completo                       shift and go to state 1
    funtions                       shift and go to state 2
    declarations                   shift and go to state 3
    program                        shift and go to state 4
    if_clause                      shift and go to state 5
    expression                     shift and go to state 6

state 1

    (0) S' -> completo .



state 2

    (1) completo -> funtions .

    $end            reduce using rule 1 (completo -> funtions .)


state 3

    (2) completo -> declarations .

    $end            reduce using rule 2 (completo -> declarations .)


state 4

    (3) completo -> program .

    $end            reduce using rule 3 (completo -> program .)


state 5

    (4) completo -> if_clause .

    $end            reduce using rule 4 (completo -> if_clause .)


state 6

    (5) completo -> expression .

    $end            reduce using rule 5 (completo -> expression .)


state 7

    (6) funtions -> FUNN . ID LPAREN INT ID GT INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE
    (9) program -> FUNN . MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE

    ID              shift and go to state 9
    MAIN            shift and go to state 10


state 8

    (7) declarations -> VAR . INT ID SEMI
    (8) declarations -> VAR . STRING ID SEMI
    (10) if_clause -> VAR . INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE
    (11) expression -> VAR . INT ID SEMI REPITE ID DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACE

    INT             shift and go to state 11
    STRING          shift and go to state 12


state 9

    (6) funtions -> FUNN ID . LPAREN INT ID GT INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE

    LPAREN          shift and go to state 13


state 10

    (9) program -> FUNN MAIN . LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE

    LPAREN          shift and go to state 14


state 11

    (7) declarations -> VAR INT . ID SEMI
    (10) if_clause -> VAR INT . ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE
    (11) expression -> VAR INT . ID SEMI REPITE ID DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACE

    ID              shift and go to state 15


state 12

    (8) declarations -> VAR STRING . ID SEMI

    ID              shift and go to state 16


state 13

    (6) funtions -> FUNN ID LPAREN . INT ID GT INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE

    INT             shift and go to state 17


state 14

    (9) program -> FUNN MAIN LPAREN . RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE

    RPAREN          shift and go to state 18


state 15

    (7) declarations -> VAR INT ID . SEMI
    (10) if_clause -> VAR INT ID . SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE
    (11) expression -> VAR INT ID . SEMI REPITE ID DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACE

    SEMI            shift and go to state 19


state 16

    (8) declarations -> VAR STRING ID . SEMI

    SEMI            shift and go to state 20


state 17

    (6) funtions -> FUNN ID LPAREN INT . ID GT INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE

    ID              shift and go to state 21


state 18

    (9) program -> FUNN MAIN LPAREN RPAREN . LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE

    LBRACE          shift and go to state 22


state 19

    (7) declarations -> VAR INT ID SEMI .
    (10) if_clause -> VAR INT ID SEMI . ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE
    (11) expression -> VAR INT ID SEMI . REPITE ID DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACE

    $end            reduce using rule 7 (declarations -> VAR INT ID SEMI .)
    ID              shift and go to state 23
    REPITE          shift and go to state 24


state 20

    (8) declarations -> VAR STRING ID SEMI .

    $end            reduce using rule 8 (declarations -> VAR STRING ID SEMI .)


state 21

    (6) funtions -> FUNN ID LPAREN INT ID . GT INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE

    GT              shift and go to state 25


state 22

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE . VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE

    VAR             shift and go to state 26


state 23

    (10) if_clause -> VAR INT ID SEMI ID . ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE

    ASSIGN          shift and go to state 27


state 24

    (11) expression -> VAR INT ID SEMI REPITE . ID DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACE

    ID              shift and go to state 28


state 25

    (6) funtions -> FUNN ID LPAREN INT ID GT . INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE

    INT             shift and go to state 29


state 26

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR . INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE

    INT             shift and go to state 30


state 27

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN . NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE

    NUMBER          shift and go to state 31


state 28

    (11) expression -> VAR INT ID SEMI REPITE ID . DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACE

    DESDE           shift and go to state 32


state 29

    (6) funtions -> FUNN ID LPAREN INT ID GT INT . ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE

    ID              shift and go to state 33


state 30

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT . ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE

    ID              shift and go to state 34


state 31

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER . SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE

    SEMI            shift and go to state 35


state 32

    (11) expression -> VAR INT ID SEMI REPITE ID DESDE . NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACE

    NUMBER          shift and go to state 36


state 33

    (6) funtions -> FUNN ID LPAREN INT ID GT INT ID . RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE

    RPAREN          shift and go to state 37


state 34

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID . SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE

    SEMI            shift and go to state 38


state 35

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI . IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE

    IF              shift and go to state 39


state 36

    (11) expression -> VAR INT ID SEMI REPITE ID DESDE NUMBER . HASTA NUMBER LBRACE CONTENIDO RBRACE

    HASTA           shift and go to state 40


state 37

    (6) funtions -> FUNN ID LPAREN INT ID GT INT ID RPAREN . LBRACE RETURN ID PLUS ID SEMI RBRACE

    LBRACE          shift and go to state 41


state 38

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI . ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE

    ID              shift and go to state 42


state 39

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF . ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE

    ID              shift and go to state 43


state 40

    (11) expression -> VAR INT ID SEMI REPITE ID DESDE NUMBER HASTA . NUMBER LBRACE CONTENIDO RBRACE

    NUMBER          shift and go to state 44


state 41

    (6) funtions -> FUNN ID LPAREN INT ID GT INT ID RPAREN LBRACE . RETURN ID PLUS ID SEMI RBRACE

    RETURN          shift and go to state 45


state 42

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID . ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE

    ASSIGN          shift and go to state 46


state 43

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID . LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE

    LT              shift and go to state 47


state 44

    (11) expression -> VAR INT ID SEMI REPITE ID DESDE NUMBER HASTA NUMBER . LBRACE CONTENIDO RBRACE

    LBRACE          shift and go to state 48


state 45

    (6) funtions -> FUNN ID LPAREN INT ID GT INT ID RPAREN LBRACE RETURN . ID PLUS ID SEMI RBRACE

    ID              shift and go to state 49


state 46

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN . ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE

    ID              shift and go to state 50


state 47

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT . NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE

    NUMBER          shift and go to state 51


state 48

    (11) expression -> VAR INT ID SEMI REPITE ID DESDE NUMBER HASTA NUMBER LBRACE . CONTENIDO RBRACE

    CONTENIDO       shift and go to state 52


state 49

    (6) funtions -> FUNN ID LPAREN INT ID GT INT ID RPAREN LBRACE RETURN ID . PLUS ID SEMI RBRACE

    PLUS            shift and go to state 53


state 50

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID . LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE

    LPAREN          shift and go to state 54


state 51

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER . LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE

    LBRACE          shift and go to state 55


state 52

    (11) expression -> VAR INT ID SEMI REPITE ID DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO . RBRACE

    RBRACE          shift and go to state 56


state 53

    (6) funtions -> FUNN ID LPAREN INT ID GT INT ID RPAREN LBRACE RETURN ID PLUS . ID SEMI RBRACE

    ID              shift and go to state 57


state 54

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN . NUMBER GT NUMBER RPAREN SEMI RBRACE

    NUMBER          shift and go to state 58


state 55

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE . CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE

    CONTENIDO       shift and go to state 59


state 56

    (11) expression -> VAR INT ID SEMI REPITE ID DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACE .

    $end            reduce using rule 11 (expression -> VAR INT ID SEMI REPITE ID DESDE NUMBER HASTA NUMBER LBRACE CONTENIDO RBRACE .)


state 57

    (6) funtions -> FUNN ID LPAREN INT ID GT INT ID RPAREN LBRACE RETURN ID PLUS ID . SEMI RBRACE

    SEMI            shift and go to state 60


state 58

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER . GT NUMBER RPAREN SEMI RBRACE

    GT              shift and go to state 61


state 59

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO . RBRACE IFELSE LBRACE CONTENIDO RBRACE

    RBRACE          shift and go to state 62


state 60

    (6) funtions -> FUNN ID LPAREN INT ID GT INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI . RBRACE

    RBRACE          shift and go to state 63


state 61

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT . NUMBER RPAREN SEMI RBRACE

    NUMBER          shift and go to state 64


state 62

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE . IFELSE LBRACE CONTENIDO RBRACE

    IFELSE          shift and go to state 65


state 63

    (6) funtions -> FUNN ID LPAREN INT ID GT INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE .

    $end            reduce using rule 6 (funtions -> FUNN ID LPAREN INT ID GT INT ID RPAREN LBRACE RETURN ID PLUS ID SEMI RBRACE .)


state 64

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER . RPAREN SEMI RBRACE

    RPAREN          shift and go to state 66


state 65

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE . LBRACE CONTENIDO RBRACE

    LBRACE          shift and go to state 67


state 66

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN . SEMI RBRACE

    SEMI            shift and go to state 68


state 67

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE . CONTENIDO RBRACE

    CONTENIDO       shift and go to state 69


state 68

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI . RBRACE

    RBRACE          shift and go to state 70


state 69

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO . RBRACE

    RBRACE          shift and go to state 71


state 70

    (9) program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE .

    $end            reduce using rule 9 (program -> FUNN MAIN LPAREN RPAREN LBRACE VAR INT ID SEMI ID ASSIGN ID LPAREN NUMBER GT NUMBER RPAREN SEMI RBRACE .)


state 71

    (10) if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE .

    $end            reduce using rule 10 (if_clause -> VAR INT ID SEMI ID ASSIGN NUMBER SEMI IF ID LT NUMBER LBRACE CONTENIDO RBRACE IFELSE LBRACE CONTENIDO RBRACE .)

